name: (publish) Ansible EE
run-name: Publish an Ansible EE docker image for release ${{ github.event.workflow_run.event.release.tag_name }}


defaults:
  run:
    shell: bash

on:
  workflow_run:
    workflows: ['(publish) Python package']
    types: completed

jobs:

  build:
    name: Build and Publish Ansible EE
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    permissions: 
      contents: read
      packages: write
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9 # <-- hardcoded as package requirements are lower than ansible-builder's
          cache: pip

      - name: install Poetry
        uses: Gr1N/setup-poetry@v8

      - name: get the tag name for new image
        id: tag
        run: echo "version_tag=$(poetry version -s)" >> $GITHUB_OUTPUT

      - name: determine docker tags and labels
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/paloaltonetworks/test_pua_ee
          tags: |
            type=raw,value=latest
            type=semver,pattern=v{{version}},value=${{ steps.tag.outputs.version_tag }}
            type=semver,pattern=v{{major}}.{{minor}},value=${{ steps.tag.outputs.version_tag }}
            type=semver,pattern=v{{major}},value=${{ steps.tag.outputs.version_tag }}

      - name: prep Poetry venv
        run: |
          poetry env use 3.9
          poetry lock
          poetry install
          poetry run pip install "ansible-builder>=3.0"

      - name: buil execution env
        run: poetry run ansible-builder create -f pua-ee.yml -v 3

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build and publish
        uses: docker/build-push-action@v5
        with:
          context: "./context/"
          file: "./context/Containerfile"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
